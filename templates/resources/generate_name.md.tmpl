---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Name}} ({{.Type | title}})

{{ .Description | trimspace }}

## Example Usage

### Basic Usage

```terraform
resource "proactnaming_generate_name" "resource_group" {
  organization  = "myorg"
  resource_type = "rg"
  application   = "webapp"
  function      = "core"
  instance      = "001"
  location      = "euw"
  environment   = "dev"
}

# Use the generated name
resource "azurerm_resource_group" "main" {
  name     = proactnaming_generate_name.resource_group.resource_name
  location = "West Europe"
}
```

### Multiple Resources with Different Functions

```terraform
# Infrastructure resource group
resource "proactnaming_generate_name" "infra_rg" {
  organization  = "myorg"
  resource_type = "rg"
  application   = "webapp"
  function      = "infra"
  instance      = "001"
  location      = "euw"
  environment   = "prod"
}

# Application resource group
resource "proactnaming_generate_name" "app_rg" {
  organization  = "myorg"
  resource_type = "rg"
  application   = "webapp"
  function      = "app"
  instance      = "001"
  location      = "euw"
  environment   = "prod"
}

# Storage account for data
resource "proactnaming_generate_name" "storage" {
  organization  = "myorg"
  resource_type = "st"
  application   = "webapp"
  function      = "data"
  instance      = "001"
  location      = "euw"
  environment   = "prod"
}
```

### Multiple Instances

```terraform
# Generate names for multiple VM instances
resource "proactnaming_generate_name" "web_servers" {
  count = 3

  organization  = "myorg"
  resource_type = "vm"
  application   = "webapp"
  function      = "web"
  instance      = format("%03d", count.index + 1)
  location      = "euw"
  environment   = "prod"
}

# Use the names for actual VMs
resource "azurerm_linux_virtual_machine" "web" {
  count = 3
  
  name                = proactnaming_generate_name.web_servers[count.index].resource_name
  resource_group_name = azurerm_resource_group.main.name
  location            = azurerm_resource_group.main.location
  size                = "Standard_B2s"
  
  # ... other configuration
}
```

### With Variables

```terraform
variable "environment" {
  description = "Environment name"
  type        = string
  default     = "dev"
  
  validation {
    condition     = contains(["dev", "test", "stage", "prod"], var.environment)
    error_message = "Environment must be one of: dev, test, stage, prod."
  }
}

variable "application" {
  description = "Application name"
  type        = string
  default     = "webapp"
}

resource "proactnaming_generate_name" "example" {
  organization  = "myorg"
  resource_type = "rg"
  application   = var.application
  function      = "core"
  instance      = "001"
  location      = "euw"
  environment   = var.environment
}
```

{{ .SchemaMarkdown | trimspace }}
