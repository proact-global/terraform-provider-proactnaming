---
page_title: "{{.ProviderShortName}} Provider"
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.ProviderShortName}} Provider

{{ .Description | trimspace }}

## Example Usage

```terraform
terraform {
  required_providers {
    proactnaming = {
      source  = "proact-global/proactnaming"
      version = "~> 1.0"
    }
  }
}

# Configure the provider using environment variables (recommended)
provider "proactnaming" {
  # Configuration via environment variables:
  # export PROACTNAMING_HOST="https://your-naming-tool.azurewebsites.net"
  # export PROACTNAMING_APIKEY="your-api-key"
  # export PROACTNAMING_ADMIN_PASSWORD="your-admin-password"  # Optional
}

# Generate a resource group name
resource "proactnaming_generate_name" "resource_group" {
  organization  = "myorg"
  resource_type = "rg"
  application   = "webapp"
  function      = "core"
  instance      = "001"
  location      = "euw"
  environment   = "dev"
}

# Use the generated name in Azure resources
resource "azurerm_resource_group" "main" {
  name     = proactnaming_generate_name.resource_group.resource_name
  location = "West Europe"
  
  tags = {
    Environment = "dev"
    Application = "webapp"
  }
}
```

### Alternative Configuration Methods

#### Direct Configuration (Not Recommended for Production)

```terraform
provider "proactnaming" {
  host           = "https://your-naming-tool.azurewebsites.net"
  apikey         = "your-api-key-here"
  admin_password = "your-admin-password" # Optional
}
```

#### Mixed Configuration

```terraform
provider "proactnaming" {
  host   = var.naming_tool_host
  apikey = var.naming_tool_apikey
  # admin_password from environment variable
}
```

{{ .SchemaMarkdown | trimspace }}
